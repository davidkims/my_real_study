name: Scorecard supply-chain security

on:
  branch_protection_rule:
  schedule:
    - cron: '32 4 * * 1'
  push:
    branches: ["main"]

# 최소 권한 선언 (read-all)
permissions: read-all

jobs:
  analysis:
    name: Scorecard analysis
    runs-on: ubuntu-latest
    # 기본 브랜치일 때만 실행 (또는 PR일 때)
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch) || github.event_name == 'pull_request'

    # job 내에서만 필요한 권한 부여
    permissions:
      security-events: write  # SARIF 업로드용
      id-token: write         # Scorecard 인증용

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false

      - name: Run OSSF Scorecard
        uses: ossf/scorecard-action@f49aabe0b5af0936a0987cfb85d86b75731b0186  # v2.4.1
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: true
          # repo_token: ${{ secrets.SCORECARD_TOKEN }}  # Optional for private repos

      - name: Upload SARIF artifact
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1  # v4.6.1
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5

      - name: Upload to GitHub Code Scanning Dashboard
        uses: github/codeql-action/upload-sarif@c568ef5c5a968345063413d6ec3c2cf48b09c5b2  # v3.24.0
        with:
          sarif_file: results.sarif
