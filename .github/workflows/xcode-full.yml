name: Xcode Fastlane Build & TestFlight

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ios-build:
    runs-on: macos-13
    timeout-minutes: 90
    env:
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      S3_KEY_PREFIX: ios_builds/${{ github.run_id }}

    steps:
      - name: ‚úÖ Checkout Code
        uses: actions/checkout@v4

      - name: üîç Detect Xcode Project Directory
        id: detect_project_dir
        run: |
          set -e
          for dir in . ./ios ./MyApp ./source; do
            if ls "$dir"/*.xcodeproj >/dev/null 2>&1 || ls "$dir"/*.xcworkspace >/dev/null 2>&1; then
              echo "‚úÖ Found project in: $dir"
              echo "PROJECT_DIR=$dir" >> $GITHUB_ENV
              exit 0
            fi
          done
          echo "‚ùå No Xcode project found"
          exit 1

      - name: üîí Prepare Directories
        run: |
          mkdir -p build_output logs artifacts fastlane
          chmod 700 build_output logs artifacts fastlane

      - name: üíé Install Ruby and Fastlane
        run: |
          brew install rbenv ruby-build
          eval "$(rbenv init - bash)"
          rbenv install -s 3.2.2
          rbenv global 3.2.2
          gem install bundler
          gem install fastlane

      - name: üìù Auto-generate Fastlane Files
        run: |
          mkdir -p "$PROJECT_DIR/fastlane"
          cat > "$PROJECT_DIR/fastlane/Fastfile" <<EOF
default_platform(:ios)

platform :ios do
  desc "Build the app"
  lane :build_app do
    build_app(
      scheme: "MyApp",
      export_method: "app-store",
      output_directory: "build_output"
    )
  end

  desc "Upload to TestFlight"
  lane :upload_to_testflight do
    upload_to_testflight
  end
end
EOF

      - name: üîë Optional: Setup App Store Connect API Key
        run: |
          if [ -n "${APP_STORE_CONNECT_API_KEY_JSON}" ]; then
            mkdir -p ~/.appstoreconnect
            echo "${APP_STORE_CONNECT_API_KEY_JSON}" | base64 --decode > ~/.appstoreconnect/api_key.json
            echo "‚úÖ API key written to ~/.appstoreconnect/api_key.json"
          else
            echo "‚ö†Ô∏è APP_STORE_CONNECT_API_KEY_JSON not set. Skipping TestFlight."
          fi
        env:
          APP_STORE_CONNECT_API_KEY_JSON: ${{ secrets.APP_STORE_CONNECT_API_KEY_JSON }}

      - name: ‚úÖ Fastlane Match (Optional)
        run: |
          cd "$PROJECT_DIR"
          if [ -n "${MATCH_PASSWORD}" ] && [ -n "${MATCH_GIT_URL}" ]; then
            fastlane match appstore --readonly \
              --git_url "${MATCH_GIT_URL}" \
              --type appstore
          else
            echo "‚ö†Ô∏è MATCH_PASSWORD or MATCH_GIT_URL not set. Skipping code signing match."
          fi
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}

      - name: üõ† Fastlane Build (Always)
        run: |
          cd "$PROJECT_DIR"
          fastlane build_app || echo "‚ö†Ô∏è build_app failed, but continuing"

      - name: ‚òÅÔ∏è Upload to TestFlight (Optional)
        run: |
          cd "$PROJECT_DIR"
          if [ -f ~/.appstoreconnect/api_key.json ]; then
            fastlane upload_to_testflight || echo "‚ö†Ô∏è TestFlight upload failed, continuing"
          else
            echo "‚ö†Ô∏è API key missing. Skipping TestFlight upload."
          fi

      - name: üì¶ Zip Build Artifacts
        run: |
          cd "$PROJECT_DIR"
          mkdir -p ../artifacts
          zip -r ../artifacts/App.ipa.zip build_output/*.ipa || true
          zip -r ../artifacts/App.dSYM.zip build_output/*.dSYM || true

      - name: ‚òÅÔ∏è Upload to AWS S3 (Optional)
        run: |
          if [ -n "$AWS_ACCESS_KEY_ID" ] && [ -n "$AWS_SECRET_ACCESS_KEY" ] && [ -n "$S3_BUCKET_NAME" ]; then
            echo "‚úÖ Uploading to S3..."
            aws s3 cp ../artifacts/App.ipa.zip "s3://${S3_BUCKET_NAME}/${S3_KEY_PREFIX}/App.ipa.zip" || true
            aws s3 cp ../artifacts/App.dSYM.zip "s3://${S3_BUCKET_NAME}/${S3_KEY_PREFIX}/App.dSYM.zip" || true
          else
            echo "‚ö†Ô∏è AWS secrets not fully set. Skipping S3 upload."
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          S3_KEY_PREFIX: ${{ env.S3_KEY_PREFIX }}

      - name: üì§ Upload Logs and Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-fastlane-logs-artifacts
          path: |
            logs/
            artifacts/
