name: Xcode Fastlane Build & TestFlight

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ios-build:
    runs-on: macos-13
    timeout-minutes: 90
    env:
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      S3_KEY_PREFIX: ios_builds/${{ github.run_id }}

    steps:
      - name: ‚úÖ Checkout Code
        uses: actions/checkout@v4

      - name: üîç Detect Xcode Project Directory
        run: |
          set -e
          for dir in . ./ios ./MyApp ./source; do
            if ls "$dir"/*.xcodeproj >/dev/null 2>&1 || ls "$dir"/*.xcworkspace >/dev/null 2>&1; then
              echo "PROJECT_DIR=$dir" >> $GITHUB_ENV
              exit 0
            fi
          done
          echo "‚ùå No Xcode project found"
          exit 1

      - name: üîí Prepare Directories
        run: |
          mkdir -p build_output logs artifacts
          chmod 700 build_output logs artifacts

      - name: üíé Install Ruby and Fastlane
        run: |
          brew install rbenv ruby-build
          eval "$(rbenv init - bash)"
          rbenv install -s 3.2.2
          rbenv global 3.2.2
          gem install bundler fastlane

      - name: üìù Auto-generate Fastlane Fastfile
        run: |
          mkdir -p "$PROJECT_DIR/fastlane"
          echo "default_platform(:ios)" > "$PROJECT_DIR/fastlane/Fastfile"
          echo "" >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "platform :ios do" >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "  desc \"Build the app\"" >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "  lane :build_app do" >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "    build_app(" >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "      scheme: \"MyApp\"," >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "      export_method: \"app-store\"," >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "      output_directory: \"build_output\"" >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "    )" >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "  end" >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "" >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "  desc \"Upload to TestFlight\"" >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "  lane :upload_to_testflight do" >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "    upload_to_testflight" >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "  end" >> "$PROJECT_DIR/fastlane/Fastfile"
          echo "end" >> "$PROJECT_DIR/fastlane/Fastfile"

      - name: üîë Setup App Store Connect API Key (Optional)
        run: |
          if [ -n "${{ secrets.APP_STORE_CONNECT_API_KEY_JSON }}" ]; then
            mkdir -p ~/.appstoreconnect
            echo "${{ secrets.APP_STORE_CONNECT_API_KEY_JSON }}" | base64 --decode > ~/.appstoreconnect/api_key.json
            echo "‚úÖ API key saved"
          else
            echo "‚ö†Ô∏è APP_STORE_CONNECT_API_KEY_JSON not set. Skipping TestFlight upload."
          fi

      - name: üîê Fastlane Match (Optional)
        run: |
          cd "$PROJECT_DIR"
          if [ -n "${{ secrets.MATCH_PASSWORD }}" ] && [ -n "${{ secrets.MATCH_GIT_URL }}" ]; then
            fastlane match appstore --readonly --git_url "${{ secrets.MATCH_GIT_URL }}" --type appstore
          else
            echo "‚ö†Ô∏è MATCH_PASSWORD or MATCH_GIT_URL not set. Skipping match."
          fi

      - name: üõ† Build with Fastlane
        run: |
          cd "$PROJECT_DIR"
          fastlane build_app || echo "‚ö†Ô∏è build_app failed, continuing..."

      - name: ‚òÅÔ∏è Upload to TestFlight (Optional)
        run: |
          cd "$PROJECT_DIR"
          if [ -f ~/.appstoreconnect/api_key.json ]; then
            fastlane upload_to_testflight || echo "‚ö†Ô∏è upload_to_testflight failed"
          else
            echo "‚ö†Ô∏è No API key. Skipping TestFlight upload."
          fi

      - name: üì¶ Compress Artifacts
        run: |
          cd "$PROJECT_DIR"
          mkdir -p ../artifacts
          zip -r ../artifacts/App.ipa.zip build_output/*.ipa || true
          zip -r ../artifacts/App.dSYM.zip build_output/*.dSYM || true

      - name: üì§ Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-fastlane-artifacts
          path: |
            logs/
            artifacts/
