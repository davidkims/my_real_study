name: Secure Project Meta Automation

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  secure-everything:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fix workflow token permissions
        run: |
          for file in .github/workflows/*.yml; do
            if ! grep -q "^permissions:" "$file"; then
              echo "üîê Injecting minimal permissions into $file"
              sed -i '0,/^on:/{s/^on:/permissions:\n  contents: read\n\non:/}' "$file"
            fi
          done

      - name: Pin unpinned GitHub Action versions
        run: |
          for file in .github/workflows/*.yml; do
            sed -i -E 's/(uses: [^@]+)@v([0-9]+)([^0-9a-zA-Z-]|$)/\1@v\2.0\3/g' "$file"
          done

      - name: Generate SECURITY.md
        run: |
          mkdir -p .github
          tee .github/SECURITY.md > /dev/null <<EOF
# Security Policy

## Reporting a Vulnerability

Please email security@example.com. We will respond within 72 hours.
EOF

      - name: Generate dependabot.yml
        run: |
          mkdir -p .github
          tee .github/dependabot.yml > /dev/null <<EOF
version: 2
updates:
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "daily"
EOF

      - name: Generate CodeQL workflow (auto-skip if no supported code)
        run: |
          mkdir -p .github/workflows
          tee .github/workflows/codeql.yml > /dev/null <<EOF
name: CodeQL Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  security-events: write

jobs:
  analyze:
    name: Analyze code
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, python, java

      - name: Check for supported code
        id: code-check
        run: |
          if ! find . -name "*.java" -o -name "*.py" -o -name "*.js" | grep -q .; then
            echo "No supported CodeQL languages found."
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "Supported source code detected."
            echo "skip=false" >> $GITHUB_OUTPUT

      - name: Run CodeQL analysis
        if: steps.code-check.outputs.skip != 'true'
        uses: github/codeql-action/analyze@v3
EOF

      - name: Apply branch protection using gh CLI
        env:
          GH_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
        run: |
          gh api \
            --method PUT \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/branches/main/protection \
            -f required_status_checks.strict=true \
            -f enforce_admins=true \
            -f required_pull_request_reviews.dismiss_stale_reviews=true \
            -f required_pull_request_reviews.required_approving_review_count=1 || echo "‚ö†Ô∏è Branch protection failed (GH_ADMIN_TOKEN missing?)"
