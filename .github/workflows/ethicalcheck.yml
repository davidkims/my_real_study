name: EthicalCheck 보안 점검 자동화

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: '39 2 * * 4'  # 매주 목요일 오전 11:39 (KST)
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  ethicalcheck_security_scan:
    name: 🔐 API 보안 점검 및 리포트
    runs-on: ubuntu-latest

    env:
      OAS_URL: "http://netbanking.apisec.ai:8080/v2/api-docs"  # 비공개 API의 경우 실제 URL로 대체
      AUTH_HEADER: "Authorization: Bearer ${{ secrets.MY_API_TOKEN }}"
      EMAIL: "your-email@example.com"

    steps:
      - name: 📦 레포지토리 체크아웃
        uses: actions/checkout@v4

      - name: 📁 디스크 슬롯 생성
        id: slot
        run: |
          TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
          SLOT_DIR="disk-slot/slot-${TIMESTAMP}"
          echo "SLOT_DIR=$SLOT_DIR" >> $GITHUB_ENV
          mkdir -p "$SLOT_DIR/logs"
          mkdir -p "$SLOT_DIR/reports"
          echo "📁 생성된 디렉토리: $SLOT_DIR"

      - name: 🔍 EthicalCheck 보안 테스트 실행
        uses: apisec-inc/ethicalcheck-action@005fac321dd843682b1af6b72f30caaf9952c641
        with:
          oas-url: "${{ env.OAS_URL }}"
          email: "${{ env.EMAIL }}"
          sarif-result-file: "${{ env.SLOT_DIR }}/reports/ethicalcheck-results.sarif"
        env:
          HTTP_HEADERS: ${{ env.AUTH_HEADER }}  # 비공개 API용 헤더 포함

      - name: 📄 SARIF 파일 상태 확인
        run: |
          echo "✅ SARIF 파일 확인:"
          if [[ -s "${{ env.SLOT_DIR }}/reports/ethicalcheck-results.sarif" ]]; then
            echo "SARIF 파일 존재 및 유효함"
            cat "${{ env.SLOT_DIR }}/reports/ethicalcheck-results.sarif"
          else
            echo "❌ SARIF 파일이 비어 있거나 생성되지 않음"
          fi

      - name: ☁️ SARIF 업로드 (유효 시)
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "${{ env.SLOT_DIR }}/reports/ethicalcheck-results.sarif"

      - name: 🧾 SARIF → PDF 변환
        if: ${{ always() }}
        run: |
          sudo apt-get update && sudo apt-get install -y pandoc
          if [[ -s "${{ env.SLOT_DIR }}/reports/ethicalcheck-results.sarif" ]]; then
            echo "📄 SARIF PDF 변환 시작"
            pandoc "${{ env.SLOT_DIR }}/reports/ethicalcheck-results.sarif" -o "${{ env.SLOT_DIR }}/reports/ethicalcheck-report.pdf"
            echo "✅ PDF 리포트 생성 완료: ethicalcheck-report.pdf"
          else
            echo "⚠️ SARIF 파일이 없으므로 PDF 변환 생략"
          fi

      - name: 📜 로그 저장
        run: |
          echo "✅ 실행 완료 시간: $(date)" > "${{ env.SLOT_DIR }}/logs/scan.log"
          ls -lh "${{ env.SLOT_DIR }}/reports" >> "${{ env.SLOT_DIR }}/logs/scan.log"
