name: EthicalCheck API 보안 점검

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: '39 2 * * 4'  # 매주 목요일 오전 11:39 (KST)
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  ethicalcheck_scan:
    name: 🔐 API 보안 점검 및 리포트 저장
    runs-on: ubuntu-latest

    env:
      OAS_URL: "http://netbanking.apisec.ai:8080/v2/api-docs"
      EMAIL: "your-email@example.com"
      AUTH_HEADER: "Authorization: Bearer ${{ secrets.MY_API_TOKEN }}"

    steps:
      - name: 📦 레포지토리 체크아웃
        uses: actions/checkout@v4

      - name: 📁 디스크 슬롯 생성
        id: create-slot
        run: |
          TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
          SLOT_DIR="disk-slot/slot-${TIMESTAMP}"
          echo "SLOT_DIR=$SLOT_DIR" >> $GITHUB_ENV
          mkdir -p "$SLOT_DIR/logs" "$SLOT_DIR/reports"
          echo "📁 디스크 슬롯 디렉토리: $SLOT_DIR"

      - name: 🔍 EthicalCheck 실행
        uses: apisec-inc/ethicalcheck-action@005fac321dd843682b1af6b72f30caaf9952c641
        with:
          oas-url: "${{ env.OAS_URL }}"
          email: "${{ env.EMAIL }}"
          sarif-result-file: "${{ env.SLOT_DIR }}/reports/ethicalcheck-results.sarif"
        env:
          HTTP_HEADERS: ${{ env.AUTH_HEADER }}

      - name: 📄 SARIF 유효성 검사
        id: check-sarif
        run: |
          FILE="${{ env.SLOT_DIR }}/reports/ethicalcheck-results.sarif"
          if [ -s "$FILE" ] && jq . "$FILE" >/dev/null 2>&1; then
            echo "valid=true" >> $GITHUB_OUTPUT
            echo "✅ SARIF 파일 유효"
          else
            echo "valid=false" >> $GITHUB_OUTPUT
            echo "❌ SARIF 파일이 유효하지 않음 또는 비어있음"
          fi

      - name: ☁️ GitHub SARIF 업로드
        if: steps.check-sarif.outputs.valid == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "${{ env.SLOT_DIR }}/reports/ethicalcheck-results.sarif"

      - name: 🧾 SARIF → PDF 변환 (Markdown 후 HTML → PDF)
        if: steps.check-sarif.outputs.valid == 'true'
        run: |
          sudo apt-get update && sudo apt-get install -y pandoc wkhtmltopdf
          FILE="${{ env.SLOT_DIR }}/reports/ethicalcheck-results.sarif"
          MARKDOWN="${{ env.SLOT_DIR }}/reports/ethicalcheck-report.md"
          PDF="${{ env.SLOT_DIR }}/reports/ethicalcheck-report.pdf"

          echo "# EthicalCheck 보안 리포트" > "$MARKDOWN"
          echo '```json' >> "$MARKDOWN"
          cat "$FILE" >> "$MARKDOWN"
          echo '```' >> "$MARKDOWN"

          pandoc "$MARKDOWN" -o "$PDF" || echo "⚠️ PDF 변환 실패 (무시됨)"

      - name: 📜 리포트 로그 작성
        run: |
          echo "✅ 분석 완료 시간: $(date)" > "${{ env.SLOT_DIR }}/logs/scan.log"
          ls -lh "${{ env.SLOT_DIR }}/reports" >> "${{ env.SLOT_DIR }}/logs/scan.log"
