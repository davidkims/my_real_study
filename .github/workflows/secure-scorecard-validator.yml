name: Scorecard Auto-Fix

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * 1'

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  auto-fix:
    name: Detect & Fix Scorecard Violations
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure .github/docs directory
        run: mkdir -p .github/docs

      - name: Add permissions if missing
        run: |
          for file in .github/workflows/*.yml; do
            if ! grep -q "^permissions:" "$file"; then
              echo "🔐 Adding 'permissions: contents: read' to $file"
              sed -i '0,/^on:/{s/^on:/permissions:\n  contents: read\n\non:/}' "$file"
            fi
          done

      - name: Pin action versions
        run: |
          for file in .github/workflows/*.yml; do
            echo "📌 Patching $file for pinned actions..."
            sed -i -E 's/(uses: [^@]+)@v([0-9]+)([^0-9a-zA-Z-]|$)/\1@v\2.0\3/g' "$file"
          done

      - name: Commit fixes (if any)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b fix/scorecard-auto || git switch fix/scorecard-auto
          git add .github/workflows || true
          git diff --cached --quiet || git commit -m "🔐 Auto-fix: token permissions & pinned actions"

      - name: Check if GH_ADMIN_TOKEN is available
        id: token-check
        run: |
          if [ -z "${{ secrets.GH_ADMIN_TOKEN }}" ]; then
            echo "GH_ADMIN_TOKEN is NOT available."
            echo "available=false" >> $GITHUB_OUTPUT
          else
            echo "GH_ADMIN_TOKEN is set."
            echo "available=true" >> $GITHUB_OUTPUT

      - name: Push to GitHub (only if token is available)
        if: steps.token-check.outputs.available == 'true'
        env:
          GH_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
        run: |
          git push -u origin fix/scorecard-auto --force

      - name: Create PR (only if token is available)
        if: steps.token-check.outputs.available == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GH_ADMIN_TOKEN }}
          commit-message: "🔐 Auto-fix Scorecard issues"
          title: "🔐 Scorecard Auto-Fix: permissions & pinned actions"
          body: |
            This PR automatically fixes:
            - Missing or insecure token permissions
            - Unpinned GitHub Action versions
          branch: fix/scorecard-auto
          delete-branch: true

      - name: Generate manual if token is missing
        if: steps.token-check.outputs.available == 'false'
        run: |
          echo "# 🛡️ GitHub Scorecard 자동 수정 활성화 가이드" > .github/docs/how_to_enable_scorecard_fix.md
          echo "" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "이 워크플로우는 보안 자동 수정을 위해 \`GH_ADMIN_TOKEN\`이 필요합니다." >> .github/docs/how_to_enable_scorecard_fix.md
          echo "" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "## ✅ 1단계: Personal Access Token (PAT) 생성" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "1. GitHub 접속: https://github.com/settings/tokens?type=beta" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "2. 권한 선택:" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "   - Contents: Read and write" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "   - Pull requests: Read and write" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "   - Actions: Read and write" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "   - Workflows: Read and write" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "   - Metadata: Read" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "## ✅ 2단계: Secrets 등록" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "1. 저장소 > Settings → Secrets and variables → Actions 접속" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "2. New repository secret 클릭" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "   - Name: \`GH_ADMIN_TOKEN\`" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "   - Value: (위에서 복사한 PAT 입력)" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "## ✅ 3단계: 워크플로우 재실행" >> .github/docs/how_to_enable_scorecard_fix.md
          echo "이제 Actions 탭에서 \`Scorecard Auto-Fix\` 워크플로우를 실행하세요." >> .github/docs/how_to_enable_scorecard_fix.md
