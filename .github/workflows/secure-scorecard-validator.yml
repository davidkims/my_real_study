name: Secure Scorecard Validator

on:
  push:
    paths:
      - ".github/workflows/**"
      - "results.sarif"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  security-events: write
  id-token: write

jobs:
  validate-and-patch:
    name: Validate SARIF and Secure Workflows
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ SARIF 유효성 검사 및 fallback 생성
      - name: Validate SARIF format
        id: sarif-check
        run: |
          echo "🔍 Validating SARIF file..."
          if ! jq empty results.sarif 2>/dev/null; then
            echo "❌ Invalid SARIF format detected!"
            echo '{
              "version": "2.1.0",
              "runs": [
                {
                  "tool": {
                    "driver": {
                      "name": "Fallback",
                      "version": "1.0.0",
                      "informationUri": "https://example.com",
                      "rules": []
                    }
                  },
                  "results": []
                }
              ]
            }' > results.sarif
            echo "fallback=true" >> "$GITHUB_OUTPUT"
          else
            echo "✅ SARIF file is valid."
            echo "fallback=false" >> "$GITHUB_OUTPUT"
          fi

      # ✅ fallback 포함 SARIF 업로드
      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

      # ✅ 보안 위협 코드 검출 및 자동 패치
      - name: Scan and patch .github/workflows/*.yml
        id: scan
        run: |
          echo "🔐 Scanning workflows for security risks..."
          mkdir -p patch-log
          touch patch-log/summary.log
          unsafe=false

          for file in .github/workflows/*.yml; do
            if grep -Eq 'curl|chmod\s+777|rm\s+-rf|set-env|sudo' "$file"; then
              echo "⚠️ Unsafe pattern found in $file"
              unsafe=true
              cp "$file" "$file.bak"
              sed -i -E 's/(curl|chmod\s+777|rm\s+-rf|set-env|sudo)/# [REMOVED UNSAFE] \1/g' "$file"
              echo "$file patched due to insecure code" >> patch-log/summary.log
            fi
          done

          echo "unsafe=$unsafe" >> "$GITHUB_OUTPUT"

      # ✅ 수정된 경우 커밋
      - name: Commit patched workflows
        if: steps.scan.outputs.unsafe == 'true'
        run: |
          echo "📦 Committing secured workflows..."
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b fix/secure-workflows
          git add .github/workflows
          git commit -m "🔒 Auto-patched insecure workflow patterns"
          git push origin fix/secure-workflows

      # ✅ 자동 PR 생성
      - name: Create Pull Request
        if: steps.scan.outputs.unsafe == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: fix/secure-workflows
          delete-branch: true
          title: "🔒 Secure Workflows: Auto-patched risky commands"
          body: |
            보안 위험 요소가 포함된 워크플로우가 자동 감지되어 수정되었습니다:

            **수정 내역:**
            ```
            $(cat patch-log/summary.log)
            ```

            ⚠️ 다음 명령어가 제거 또는 주석 처리됨: `curl`, `chmod 777`, `rm -rf`, `set-env`, `sudo`
