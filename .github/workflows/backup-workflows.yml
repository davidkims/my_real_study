name: Full System Automation with Backup, Test, and Reporting

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  full-backup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set timestamp (KST)
      id: vars
      run: |
        export TZ=Asia/Seoul
        echo "timestamp=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
        echo "date_fmt=$(date '+%Y-%m-%d %H:%M:%S (KST)')" >> $GITHUB_OUTPUT

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y apache2 unzip curl default-jdk libaio-dev

    - name: Prepare backup directories
      run: |
        mkdir -p apache_backups nt-backup/bin db_backups oracle_backups backups reports eai_backups springboot springboot_backups maven_backups

    - name: Setup Spring Boot JAR
      run: |
        curl -L https://repo.spring.io/release/org/springframework/boot/spring-boot-samples/2.7.3/spring-boot-samples-2.7.3.jar -o springboot/app.jar
        echo "java -jar $(pwd)/springboot/app.jar" > springboot/run.sh
        chmod +x springboot/run.sh

    - name: Generate .env and application.yml
      run: |
        echo "APP_ENV=production" > springboot/.env
        mkdir -p springboot/src/main/resources
        printf "spring:\n  application:\n    name: SampleApp\n  server:\n    port: 8080\n" > springboot/src/main/resources/application.yml

    - name: Install Maven
      run: |
        curl -LO https://downloads.apache.org/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.zip
        unzip apache-maven-3.9.6-bin.zip -d ./maven_backups
        mv maven_backups/apache-maven-3.9.6 maven_backups/maven-${{ steps.vars.outputs.timestamp }}
        echo "$(pwd)/maven_backups/maven-${{ steps.vars.outputs.timestamp }}/bin" >> $GITHUB_PATH

    - name: Test Maven
      run: mvn --version

    - name: Run Spring Boot for test
      run: |
        nohup java -jar springboot/app.jar > springboot/run.log 2>&1 &
        sleep 10
        curl -s http://localhost:8080 || echo "No default route"
        pkill -f 'springboot/app.jar' || true

    - name: Backup Artifacts
      run: |
        cp springboot/app.jar springboot_backups/app-${{ steps.vars.outputs.timestamp }}.jar
        zip -r backups/workflows-backup-${{ steps.vars.outputs.timestamp }}.zip .github/workflows
        echo "-- Sample DB Backup" > db_backups/db-backup-${{ steps.vars.outputs.timestamp }}.sql
        echo "-- Oracle DB Export (simulated)" > oracle_backups/oracle-backup-${{ steps.vars.outputs.timestamp }}.dmp

    - name: Simulate EAI logs
      run: |
        echo "<msg><status>OK</status></msg>" > eai_backups/send-${{ steps.vars.outputs.timestamp }}.xml
        echo "<msg><status>OK</status></msg>" > eai_backups/receive-${{ steps.vars.outputs.timestamp }}.xml

    - name: Analyze EAI logs
      id: eai
      run: |
        send_status=$(grep -oP '<status>\K[^<]+' eai_backups/send-${{ steps.vars.outputs.timestamp }}.xml)
        recv_status=$(grep -oP '<status>\K[^<]+' eai_backups/receive-${{ steps.vars.outputs.timestamp }}.xml)
        echo "send_status=$send_status" >> $GITHUB_OUTPUT
