name: Full System Setup, Backup & Pages Report

on:
  schedule:
    - cron: '0 23 * * *'  # Îß§Ïùº Ïò§Ï†Ñ 8Ïãú (KST)
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  system-backup:
    name: System Install, Backup, and Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set timestamp
        id: vars
        run: |
          echo "timestamp=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
          echo "date_fmt=$(date '+%Y-%m-%d %H:%M:%S (KST)')" >> $GITHUB_OUTPUT

      - name: Install Apache and setup authentication
        run: |
          sudo apt-get update
          sudo apt-get install -y apache2 apache2-utils
          sudo mkdir -p /etc/apache2/auth
          sudo htpasswd -bc /etc/apache2/auth/.htpasswd admin password123
          echo '<Directory "/var/www/html">' | sudo tee /etc/apache2/conf-available/auth.conf
          echo '  AuthType Basic' | sudo tee -a /etc/apache2/conf-available/auth.conf
          echo '  AuthName "Restricted"' | sudo tee -a /etc/apache2/conf-available/auth.conf
          echo '  AuthUserFile /etc/apache2/auth/.htpasswd' | sudo tee -a /etc/apache2/conf-available/auth.conf
          echo '  Require valid-user' | sudo tee -a /etc/apache2/conf-available/auth.conf
          echo '</Directory>' | sudo tee -a /etc/apache2/conf-available/auth.conf
          sudo a2enconf auth
          sudo systemctl restart apache2

      - name: Backup Apache configuration safely
        run: |
          mkdir -p apache_backups
          if [ -d /etc/apache2 ]; then
            sudo cp -r /etc/apache2 apache_backups/etc_apache2_${{ steps.vars.outputs.timestamp }}
            echo "Apache configuration copied." > apache_backups/apache-copy.log
          else
            echo "Apache not found on runner." > apache_backups/apache-copy.log
          fi

      - name: Simulate NT Backup installation
        run: |
          mkdir -p nt-backup/bin
          echo "#!/bin/bash\necho 'NT Backup service running...'" > nt-backup/bin/ntbackup
          chmod +x nt-backup/bin/ntbackup
          echo "NT backup initialized." > nt-backup/nt-service.log

      - name: Create other required directories
        run: |
          mkdir -p backups
          mkdir -p db_backups
          mkdir -p storage/logs
          mkdir -p storage/tmp
          mkdir -p storage/data
          mkdir -p reports

      - name: Backup workflows
        run: |
          zip -r "backups/workflows-backup-${{ steps.vars.outputs.timestamp }}.zip" .github/workflows

      - name: Simulate DB backup
        run: |
          echo "-- Daily DB backup" > db_backups/db-backup-${{ steps.vars.outputs.timestamp }}.sql
          echo "CREATE TABLE IF NOT EXISTS sample (id INT);" >> db_backups/db-backup-${{ steps.vars.outputs.timestamp }}.sql

      - name: Delete old ZIPs (30+ days)
        run: |
          find backups -type f -name "*.zip" -mtime +30 -exec echo "üóëÔ∏è Deleting {}" \; -exec rm {} \;
          find apache_backups -type f -name "*.zip" -mtime +30 -exec echo "üóëÔ∏è Deleting {}" \; -exec rm {} \;

      - name: Generate Markdown backup report
        run: |
          REPORT="reports/backup-report-${{ steps.vars.outputs.timestamp }}.md"
          echo "# ‚úÖ Backup Report - ${{ steps.vars.outputs.date_fmt }}" > "$REPORT"
          echo "" >> "$REPORT"
          echo "## ‚úÖ Apache Installed & Auth Enabled" >> "$REPORT"
          echo "- Apache with htpasswd at \`/etc/apache2/auth/.htpasswd\`" >> "$REPORT"
          echo "- Auth config: \`/etc/apache2/conf-available/auth.conf\`" >> "$REPORT"
          echo "" >> "$REPORT"
          echo "## ‚úÖ NT Backup Simulated" >> "$REPORT"
          echo "- \`nt-backup/bin/ntbackup\` and log file created" >> "$REPORT"
          echo "" >> "$REPORT"
          echo "## üìÅ Other Directories" >> "$REPORT"
          echo "- \`storage/\`, \`apache_backups/\`, \`backups/\`, \`db_backups/\`" >> "$REPORT"
          echo "" >> "$REPORT"
          echo "## üßπ Old Backups Cleaned" >> "$REPORT"
          echo "- ZIPs over 30 days in backups/* were deleted" >> "$REPORT"
          echo "" >> "$REPORT"
          echo "---" >> "$REPORT"
          echo "_Generated by GitHub Actions_" >> "$REPORT"

      - name: Commit and push
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git pull origin ${{ github.ref_name }}
          git add nt-backup/ apache_backups/ reports/*.md backups/*.zip db_backups/*.sql storage/
          git commit -m "üõ†Ô∏è Full system install & report at ${{ steps.vars.outputs.timestamp }}" || echo "Nothing to commit"
          git push origin ${{ github.ref_name }}

  deploy-pages:
    needs: system-backup
    name: Deploy Backup Reports to GitHub Pages
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy reports to pages directory
        run: |
          mkdir -p public
          cp -r reports/* public/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
