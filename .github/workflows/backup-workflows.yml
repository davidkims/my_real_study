name: Full Backup and Preparation Workflow

on:
  schedule:
    - cron: '0 21 * * 0'
    - cron: '10 21 * * 0'
    - cron: '20 21 * * 0'
    - cron: '30 21 * * 0'
    - cron: '40 21 * * 0'
    - cron: '50 21 * * 0'
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  pages: write

jobs:
  cleanup-and-prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Initialize Markdown Report
        run: |
          echo "# 📦 Backup Report - $(date '+%Y-%m-%d %H:%M:%S')" > backup-report.md
          echo "" >> backup-report.md
          echo "## 💾 Initial Disk Usage" >> backup-report.md
          df -h >> backup-report.md

      - name: Delete Existing Backup Files in .github/workflows
        run: |
          echo "🧹 기존 백업 파일 삭제 시작" | tee -a backup-report.md
          find .github/workflows -type f -name '*backup*' -exec rm -v {} + | tee -a backup-report.md || true
          rm -f .github/workflows/backup_files.zip || true
          echo "✅ 기존 백업 파일 삭제 완료" | tee -a backup-report.md

      - name: Create Directories and Maximize Disk Capacity (Safe)
        run: |
          sudo mkdir -p /opt/backup/{sql,teradata,nt,apache,swift,homebrew,symantec,uploads,transactions,ledger,splits}
          echo "📦 디스크 예약 공간 확보 중..."
          USAGE=$(df /opt | awk 'NR==2{print $5}' | sed 's/%//')
          if [ "$USAGE" -lt 90 ]; then
            if sudo fallocate -l 100G /opt/backup/.reserve_space; then
              echo "✅ fallocate 사용 성공"
            else
              echo "⚠️ fallocate 실패: dd 방식으로 대체합니다"
              if sudo dd if=/dev/zero of=/opt/backup/.reserve_space bs=1M count=102400; then
                echo "✅ dd 방식 예약 성공"
              else
                echo "❌ dd 실패: 디스크 용량 부족으로 예약 공간 확보 실패"
              fi
            fi
          else
            echo "⚠️ 현재 디스크 사용률 ${USAGE}% 이상. 예약 공간 생성 생략합니다." | tee -a backup-report.md
          fi
          sudo chmod -R 777 /opt/backup
          echo "✅ 디스크 최대 용량 확보 및 디렉토리 준비 완료" | tee -a backup-report.md
          echo "\n## 📦 Disk Usage After Directory Setup" >> backup-report.md
          df -h >> backup-report.md

      - name: Split Workflow Files into Nano Units if Low Space
        run: |
          echo "\n## 🧬 Nano Backup Execution Logic" >> backup-report.md
          USAGE=$(df /opt | awk 'NR==2{print $5}' | sed 's/%//')
          if [ "$USAGE" -ge 90 ]; then
            echo "⚠️ 디스크 사용률이 90% 이상입니다. 작업을 나노 단위로 분할합니다." | tee -a backup-report.md
            FILES=$(find .github/workflows -type f -name '*.yml')
            INDEX=0
            for FILE in $FILES; do
              BASENAME=$(basename "$FILE")
              SPLIT_DIR="/opt/backup/splits/$BASENAME"
              mkdir -p "$SPLIT_DIR"
              split -l 20 "$FILE" "$SPLIT_DIR/part_" && echo "🧩 $FILE → $SPLIT_DIR/part_* 분할됨" >> backup-report.md
              INDEX=$((INDEX + 1))
            done
          else
            echo "✅ 디스크 사용량 양호: 나노 단위 작업 분할 불필요" >> backup-report.md
          fi
