name: Daily Workflow & DB Backup with Report

on:
  schedule:
    - cron: '0 23 * * *'  # 매일 오전 8시 (KST 기준)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  backup:
    name: Daily Backup and Markdown Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set timestamp
        id: vars
        run: |
          echo "timestamp=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
          echo "date_fmt=$(date '+%Y-%m-%d %H:%M:%S (KST)')" >> $GITHUB_OUTPUT

      - name: Create necessary folders
        run: |
          mkdir -p backups
          mkdir -p db_backups
          mkdir -p storage/logs
          mkdir -p storage/tmp
          mkdir -p storage/data
          mkdir -p reports

      - name: Compress workflows directory
        run: |
          zip -r "backups/workflows-backup-${{ steps.vars.outputs.timestamp }}.zip" .github/workflows

      - name: Simulate DB backup
        run: |
          echo "-- Daily DB backup" > db_backups/db-backup-${{ steps.vars.outputs.timestamp }}.sql
          echo "CREATE TABLE IF NOT EXISTS sample (id INT);" >> db_backups/db-backup-${{ steps.vars.outputs.timestamp }}.sql

      - name: Delete ZIP files older than 30 days
        run: |
          find backups -type f -name "*.zip" -mtime +30 -exec echo "🗑️ Deleting {}" \; -exec rm {} \;

      - name: Generate Markdown backup report
        run: |
          REPORT="reports/backup-report-${{ steps.vars.outputs.timestamp }}.md"
          echo "# ✅ Backup Report - ${{ steps.vars.outputs.date_fmt }}" > "$REPORT"
          echo "" >> "$REPORT"
          echo "## ✅ Workflows Backup" >> "$REPORT"
          echo "- Created: \`backups/workflows-backup-${{ steps.vars.outputs.timestamp }}.zip\`" >> "$REPORT"
          echo "" >> "$REPORT"
          echo "## ✅ Database Backup" >> "$REPORT"
          echo "- Created: \`db_backups/db-backup-${{ steps.vars.outputs.timestamp }}.sql\`" >> "$REPORT"
          echo "" >> "$REPORT"
          echo "## 📁 Storage Directories" >> "$REPORT"
          echo "- \`storage/logs/\`" >> "$REPORT"
          echo "- \`storage/tmp/\`" >> "$REPORT"
          echo "- \`storage/data/\`" >> "$REPORT"
          echo "" >> "$REPORT"
          echo "## 🧹 Old ZIP Cleaned" >> "$REPORT"
          echo "- ZIPs older than 30 days automatically deleted" >> "$REPORT"
          echo "" >> "$REPORT"
          echo "---" >> "$REPORT"
          echo "_Generated by GitHub Actions_" >> "$REPORT"

      - name: Commit and push changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git pull origin ${{ github.ref_name }}
          git add backups/*.zip db_backups/*.sql reports/*.md storage/
          git commit -m "📦 Daily backup and report at ${{ steps.vars.outputs.timestamp }}" || echo "Nothing to commit"
          git push origin ${{ github.ref_name }}
